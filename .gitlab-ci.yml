# This file is auto-generated by DevPlatform for further customizing as you wish.
# NOTE: You should not delete this file!

variables:
  DOCKER_TLS_CERTDIR: /docker-certs
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: ${DOCKER_TLS_CERTDIR}/client
  DOCKER_PROXY: docker-proxy.artifactory.tcsbank.ru
  DOCKER_REGISTRY: docker-hosted.artifactory.tcsbank.ru
  
  HTTPS_PROXY: http://proxy.tcsbank.ru:8080
  HTTP_PROXY: http://proxy.tcsbank.ru:8080
  http_proxy: http://proxy.tcsbank.ru:8080
  https_proxy: http://proxy.tcsbank.ru:8080
  no_proxy: 'docker,.tinkoff.cloud,.tcsbank.ru,.tinkoff.ru'
  
  GOPROXY: "https://athens.tcsbank.ru:3000"
  GOPRIVATE: "*.tcsbank.ru,*.tinkoff.cloud"
  GOLANG_VERSION: "1.17"
  
  SERVICE_NAME: clickhouse-proxy-server
  IMAGE_TAG: $CI_COMMIT_SHA
  DOCKER_IMAGE: "${DOCKER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${SERVICE_NAME}/${CLUSTER}:${PREFIX}-${IMAGE_TAG}"

stages:
  - build
  - deploy

.build-base:
  image:
    name: docker-hosted.artifactory.tcsbank.ru/cicd-images/base-kaniko:release-v1.8.12
  before_script:
    - dp auth service-acc --key-file $DP_DEPLOY_SERVICE_KEY # в переменной должен лежать ключ сервис-аккаунта
    - dp auth configure-kaniko # настройка kaniko (токен действует 1 час)
  script:
    - echo "build and push to ${DOCKER_IMAGE}"
    - IMAGE_CHECK_OUTPUT=$(dp jfrog rt s "${IMAGE_NAME_FOR_CHECK}" 2>&1)
    - echo ${IMAGE_CHECK_OUTPUT}
    - |- 
      if $( echo ${IMAGE_CHECK_OUTPUT} | grep -q "Found 0 artifacts" )
      then
        executor --dockerfile $CI_PROJECT_DIR/Dockerfile \
                  --build-arg "http_proxy=$http_proxy" \
                  --build-arg "CLICKHOUSE_USER_PROD=$CLICKHOUSE_USER_PROD" \
                  --build-arg "CLICKHOUSE_PASSWORD_PROD=$CLICKHOUSE_PASSWORD_PROD" \
                  --build-arg "CLICKHOUSE_USER_TEST=$CLICKHOUSE_USER_TEST" \
                  --build-arg "CLICKHOUSE_PASSWORD_TEST=$CLICKHOUSE_PASSWORD_TEST" \
                  --build-arg "CLICKHOUSE_PROJECT_OWNER_USER_DEV=$CLICKHOUSE_PROJECT_OWNER_USER_DEV" \
                  --build-arg "CLICKHOUSE_PROJECT_OWNER_PASSWORD_DEV=$CLICKHOUSE_PROJECT_OWNER_PASSWORD_DEV" \
                  --build-arg "CLICKHOUSE_PROJECT_OWNER_USER=$CLICKHOUSE_PROJECT_OWNER_USER" \
                  --build-arg "CLICKHOUSE_PROJECT_OWNER_PASSWORD=$CLICKHOUSE_PROJECT_OWNER_PASSWORD" \
                  --build-arg "CLICKHOUSE_DWH_USER=$CLICKHOUSE_DWH_USER" \
                  --build-arg "CLICKHOUSE_DWH_PASSWORD=$CLICKHOUSE_DWH_PASSWORD" \
                  --build-arg "CLICKHOUSE_CHARTS_USER=$CLICKHOUSE_CHARTS_USER" \
                  --build-arg "CLICKHOUSE_CHARTS_PASSWORD=$CLICKHOUSE_CHARTS_PASSWORD" \
                  --build-arg "CLICKHOUSE_SME_USER=$CLICKHOUSE_SME_USER" \
                  --build-arg "CLICKHOUSE_SME_PASSWORD=$CLICKHOUSE_SME_PASSWORD" \
                  --build-arg "CLICKHOUSE_DCO_USER=$CLICKHOUSE_DCO_USER" \
                  --build-arg "CLICKHOUSE_DCO_PASSWORD=$CLICKHOUSE_DCO_PASSWORD" \
                  --build-arg "CLICKHOUSE_NODES=$CLICKHOUSE_NODES" \
                  --build-arg "https_proxy=$https_proxy" \
                  --build-arg "no_proxy=$no_proxy" \
                  --build-arg "BUILD_VERSION=${CI_COMMIT_REF_NAME}" \
                  --build-arg "BUILD_HASH=${CI_COMMIT_SHA}" \
                  --build-arg "REDIS_PASSWORD=$REDIS_PASSWORD" \
                  --context ${CI_PROJECT_DIR} \
                  --destination "${DOCKER_IMAGE}" \
                  --log-timestamp \
                  -v warn
        echo "pushed to ${DOCKER_IMAGE}"
      else
        echo "image ${DOCKER_IMAGE} already exist"
      fi
  variables:
    IMAGE_NAME_FOR_CHECK: "docker-hosted/${CI_PROJECT_NAMESPACE}/${SERVICE_NAME}/${CLUSTER}/${PREFIX}-${IMAGE_TAG}/*"
    CLICKHOUSE_NODES: "[\"10.96.7.24:8123\",\"10.96.7.36:8123\",\"10.96.7.8:8123\",\"10.97.7.39:8123\",\"10.97.7.19:8123\",\"10.97.7.17:8123\"]"
    CLICKHOUSE_USER_PROD: $CLICKHOUSE_USER_PROD
    CLICKHOUSE_PASSWORD_PROD: $CLICKHOUSE_PASSWORD_PROD
    CLICKHOUSE_USER_TEST: $CLICKHOUSE_USER_TEST
    CLICKHOUSE_PASSWORD_TEST: $CLICKHOUSE_PASSWORD_TEST
    CLICKHOUSE_PROJECT_OWNER_USER_DEV: $CLICKHOUSE_PROJECT_OWNER_USER_DEV
    CLICKHOUSE_PROJECT_OWNER_PASSWORD_DEV: $CLICKHOUSE_PROJECT_OWNER_PASSWORD_DEV
    CLICKHOUSE_PROJECT_OWNER_USER: $CLICKHOUSE_PROJECT_OWNER_USER_PROD
    CLICKHOUSE_PROJECT_OWNER_PASSWORD: $CLICKHOUSE_PROJECT_OWNER_PASSWORD_PROD
    CLICKHOUSE_DWH_USER: $CLICKHOUSE_DWH_USER
    CLICKHOUSE_DWH_PASSWORD: $CLICKHOUSE_DWH_PASSWORD
    CLICKHOUSE_CHARTS_USER: $CLICKHOUSE_CHARTS_USER
    CLICKHOUSE_CHARTS_PASSWORD: $CLICKHOUSE_CHARTS_PASSWORD
    CLICKHOUSE_SME_USER: $CLICKHOUSE_SME_USER
    CLICKHOUSE_SME_PASSWORD: $CLICKHOUSE_SME_PASSWORD
    CLICKHOUSE_DCO_USER: $CLICKHOUSE_DCO_USER
    CLICKHOUSE_DCO_PASSWORD: $CLICKHOUSE_DCO_PASSWORD
    REDIS_PASSWORD: $YANDEX_CLOUD_REDIS_CACHE_PASSWORD_PROD
    PREFIX: stable
    CLUSTER: prod2
build-dev:
  extends:
    - .build-base
  stage: build
  only:
    - merge_requests

build:
  extends:
    - .build-base
  stage: build
  only: 
    - master

deploy-prod:
  image: docker-hosted.artifactory.tcsbank.ru/unic/unic-main-container-1:latest
  stage: deploy
  variables:
    PREFIX: stable
    CLUSTER: prod2
  script:
    - echo "${DOCKER_IMAGE}"
    - unic deploy --app ${SERVICE_NAME} --stand ${CLUSTER} --dockerImage "${DOCKER_IMAGE}"
  dependencies:
    - build
  only:
    - master
